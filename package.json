{
  "name": "@openscd/oscd-tree-grid",
  "description": "An mwc-list based grid component for selecting subtrees from tree shaped data structures",
  "license": "Apache-2.0",
  "version": "0.0.1-alpha.12",
  "type": "module",
  "main": "dist/oscd-tree-grid.js",
  "module": "dist/oscd-tree-grid.js",
  "exports": {
    ".": "./dist/oscd-tree-grid.js"
  },
  "scripts": {
    "analyze": "cem analyze",
    "start": "tsc && concurrently -k -r \"tsc --watch --preserveWatchOutput\" \"wds\"",
    "build": "tsc && npm run analyze -- --exclude dist",
    "prepare": "npm run build && npx gunzip -d tree.json.gz",
    "lint": "eslint --ext .ts,.html . --ignore-path .gitignore && prettier \"**/*.ts\" --check --ignore-path .gitignore",
    "format": "eslint --ext .ts,.html . --fix --ignore-path .gitignore && prettier \"**/*.ts\" --write --ignore-path .gitignore",
    "test": "npm run test:unit && npm run test:visual",
    "test:unit": "tsc && wtr",
    "test:visual": "tsc && wtr --config visual.config.js",
    "test:update": "tsc && wtr --config visual.config.js --update-visual-baseline",
    "test:watch": "tsc && concurrently -k -r \"tsc --watch --preserveWatchOutput\" \"wtr --watch\"",
    "test:watch:visual": "tsc && concurrently -k -r \"tsc --watch --preserveWatchOutput\" \"wtr --config visual.config.js --watch\"",
    "storybook": "tsc && npm run analyze -- --exclude dist && concurrently -k -r \"tsc --watch --preserveWatchOutput\" \"wds -c .storybook/server.mjs\"",
    "storybook:build": "tsc && npm run analyze -- --exclude dist && build-storybook",
    "deploy": "npm run storybook:build && gh-pages --dist 'storybook-static'"
  },
  "dependencies": {
    "@material/mwc-icon": "^0.27.0",
    "@material/mwc-list": "^0.27.0",
    "@material/mwc-textfield": "^0.27.0",
    "lit": "^2.0.2"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.3.0",
    "@commitlint/config-conventional": "^17.3.0",
    "@custom-elements-manifest/analyzer": "^0.4.17",
    "@open-wc/eslint-config": "^8.0.2",
    "@open-wc/testing": "^3.1.6",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "@web/dev-server": "^0.1.34",
    "@web/dev-server-storybook": "^0.5.4",
    "@web/test-runner": "^0.14.0",
    "@web/test-runner-playwright": "^0.9.0",
    "@web/test-runner-visual-regression": "^0.7.0",
    "cem-plugin-readme": "^0.1.4",
    "concurrently": "^5.3.0",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^8.3.0",
    "gh-pages": "^4.0.0",
    "gunzip": "^1.2.2",
    "husky": "^4.3.8",
    "lint-staged": "^10.5.4",
    "prettier": "^2.4.1",
    "rollup-plugin-copy": "^3.4.0",
    "tslib": "^2.3.1",
    "typescript": "^4.5.2"
  },
  "customElements": "custom-elements.json",
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "@open-wc",
      "prettier"
    ],
    "plugins": [
      "@typescript-eslint"
    ],
    "rules": {
      "no-unused-vars": "off",
      "sort-imports": [
        "error",
        {
          "ignoreCase": true,
          "allowSeparatedGroups": true
        }
      ],
      "class-methods-use-this": [
        "error",
        {
          "exceptMethods": [
            "locale"
          ]
        }
      ],
      "@typescript-eslint/no-explicit-any": [
        "error",
        {
          "ignoreRestArgs": true
        }
      ],
      "import/no-extraneous-dependencies": [
        "error",
        {
          "devDependencies": [
            "**/*.visual.ts",
            "**/*.spec.ts",
            "**/*.book.ts",
            "**/*.config.js"
          ]
        }
      ],
      "import/no-unresolved": "off",
      "import/extensions": [
        "error",
        "always",
        {
          "ignorePackages": true
        }
      ]
    }
  },
  "prettier": {
    "singleQuote": true,
    "arrowParens": "avoid"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run analyze",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
